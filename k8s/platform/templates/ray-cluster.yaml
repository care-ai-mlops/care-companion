---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ray
  namespace: ray
  annotations:
    csi-rclone/storage-path: ray
    csi-rclone/umask: "022"
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: {{ $values.blockStorage.raySize }}
  storageClassName: rclone
---
apiVersion: ray.io/v1
kind: RayCluster
metadata:
  name: ray-gpu-cluster
  namespace: ray
spec:
  rayVersion: "2.9.0" 
  headGroupSpec:
    serviceType: ClusterIP
    rayStartParams:
      dashboard-host: "0.0.0.0"
      num-gpus: "0"
    template:
      spec:
        containers:
        - name: ray-head
          image: rayproject/ray:2.9.0
          resources:
            limits:
              cpu: "2"
              memory: "4Gi"
          ports:
            - containerPort: 8265
              name: dashboard
            - containerPort: 8080
              name: metrics
            - containerPort: 10001
              name: client
  workerGroupSpecs:
  - groupName: worker-group
    replicas: 2
    rayStartParams:
      num-gpus: "1"
    template:
      spec:
        containers:
          - name: ray-worker
            image: rayproject/ray:2.9.0
            resources:
              limits:
                nvidia.com/gpu: 1
                cpu: "16"
                memory: "32Gi"
            volumeMounts:
              - name: object-store
                mountPath: /mnt/object/
        volumes:
          - name: object-store
            persistentVolumeClaim:
              claimName: ray
---
apiVersion: v1
kind: Service
metadata:
  name: ray-dashboard-metrics
  namespace: ray
spec:
  selector:
    ray.io/node-type: head
  type: ClusterIP
  ports:
    - name: dashboard
      port: 8265
      targetPort: 8265
    - name: metrics
      port: 8080
      targetPort: 8080
    - name: client
      port: 10001
      targetPort: 10001
  externalIPs:
    - 192.168.1.10 